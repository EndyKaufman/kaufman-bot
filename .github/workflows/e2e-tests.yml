name: "E2E tests"

on:
  push:
    branches: [develop]

jobs:
  e2e-test:
    name: E2E tests in docker
    environment: prod
    runs-on: ubuntu-latest

    steps:
      # E2E tests in docker 
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          # We must fetch at least the immediate parents so that if this is
          # a pull request then we can checkout the head.
          fetch-depth: 2

      - name: Cache node_modules
        id: cache_node_modules
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package.json') }}

      - name: Install packages
        run: yarn install --link-duplicates --non-interactive
        if: ${{steps.cache_node_modules.outputs.cache-hit != 'true' }}

      - name: Generate files
        run: npm run generate-ci
        
      - name: Run tests
        run: |
          ./env/prod.env.sh
          export HOST=${{ secrets.HOST }}
          export APIAI_CLIENT_ACCESS_TOKEN=${{ secrets.APIAI_CLIENT_ACCESS_TOKEN}}
          export BOT_ADMIN_TELEGRAM_ID=${{ secrets.BOT_ADMIN_TELEGRAM_ID}}
          export GOOGLE_APIS_API_KEY=${{ secrets.GOOGLE_APIS_API_KEY}}
          export GOOGLE_APIS_HABR_CUSTOM_SEARCH_ENGINE_ID=${{ secrets.GOOGLE_APIS_HABR_CUSTOM_SEARCH_ENGINE_ID}}
          export MICROSOFT_APP_ID=${{ secrets.MICROSOFT_APP_ID}}
          export MICROSOFT_APP_PASSWORD=${{ secrets.MICROSOFT_APP_PASSWORD}}
          export ROLLBAR_POST_SERVER_ITEM_ACCESS_TOKEN=${{ secrets.ROLLBAR_POST_SERVER_ITEM_ACCESS_TOKEN}}
          export ROLLBAR_SERVER_ACCESS_TOKEN=${{ secrets.ROLLBAR_SERVER_ACCESS_TOKEN}}
          export TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN}}
          npm run test